<!--

    Seed
    Copyright (C) 2021 EUUâ›°ROCKS

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE xml>
<borderlayout>
	<north border="0">
		<toolbar width="100%">
			<toolbarbutton label="${labels.admin.entity.newfield}" 
						   iconSclass="new-button z-icon-file-o alpha-icon-lg" 
					   	   onClick="@command('newField')"/>
			<toolbarbutton label="${labels.admin.entity.removefield}" 
						   iconSclass="remove-button z-icon-remove alpha-icon-lg" 
					   	   onClick="@command('removeField',elem=self)"
					   	   visible="@load(not empty vm.field)"/>
		</toolbar>
	</north>
	<center border="0">
		<listbox model="@load(vm.object.fields)" 
		         selectedItem="@bind(vm.field)"
		         onSelect="@command('selectField')"
		         visible="@load(!empty vm.object.fields)"
		         class="alpha-noborder"
		         hflex="1" vflex="1">
			<listhead sizable="true">
	            <listheader label="${labels.label.field}" 
	            			sort="auto(name)" hflex="1"/>
	            <listheader label="${labels.label.fieldgroup}" 
	            			sort="auto(fieldGroup.name)" hflex="1"
	            			visible="@load(!empty vm.object.allFieldGroups)"/>
	            <listheader label="${labels.label.datatype}" 
	            			sort="auto(type)" hflex="1"/>
	            <listheader label="${labels.label.mandatory}" 
	            			sort="auto(mandatory)" hflex="min"/>
	        </listhead> 
	        <template name="model" var="field">
	            <listitem sclass="@init(vm.getListItemTestClass(field))" 
	            		  attributes.item="@load(field)" 
	            		  draggable="true" droppable="true" 
	            		  onDrop="@command('swapFields',item=event.dragged.attributes.item,base=field)">
	            	<listcell iconSclass="@load(empty field.type ? '' : field.isReferenceField() ? 'z-icon-share alpha-icon-lg' : 'z-icon-font alpha-icon-lg')">
	            		<label value="@load(field.name)" 
	            			   style="margin-left:3px"/>
	            	</listcell>
	            	<listcell iconSclass="@load(empty field.fieldGroup ? '' : 'z-icon-object-group alpha-icon-lg')">
	            		<label value="@load(field.fieldGroup.name)"/>
	            	</listcell>
	            	<listcell>
	            		<label value="@load(vm.getEnumLabel(field.type))"/>
	            	</listcell>
	            	<listcell>
	            		<div align="center">
	            			<checkbox checked="@bind(field.mandatory)"
	            					  onCheck="@command('flagDirty')"
	            					  disabled="@load(field.type.isAutonum())"/>
	            		</div>
	            	</listcell>
	            </listitem>
		    </template> 
		</listbox>
	</center>
	<east title="${labels.label.properties}" 
		  visible="@load(!empty vm.field)"
		  width="275px" border="0" collapsible="true" 
		  class="alpha-properties">
		<vlayout class="alpha-properties-content">
        	<label value="${labels.label.fieldname}:"/>
        	<div sclass="fieldname-field">
	            <textbox value="@bind(vm.field.name) @converter(vm.stringConverter)"
	            		 tooltiptext="@load(vm.field.internalName)"
	            		 mandatory="true"
	            		 onChange="@command('flagDirty',notify='field')"
	            		 hflex="1"/>
            </div>
            <label value="${labels.label.columnname}:"/> 
            <div sclass="columnname-field">  		 
	            <textbox value="@bind(vm.field.columnName) @converter(vm.stringConverter)"
	            		 sclass="columnname-field"
	            		 placeholder="@load(vm.field.internalName)"
	            		 onChange="@command('flagDirty')"
	            		 hflex="1"/>
            </div>
            <vlayout visible="@load(!empty vm.object.allFieldGroups)">
	            <label value="${labels.label.fieldgroup}:"/>
	            <div sclass="fieldgroup-field"> 
		            <combobox model="@load(vm.object.allFieldGroups) @template(empty each.name ? 'empty' : 'group')"
							  selectedItem="@bind(vm.field.fieldGroup)"
							  value="@load(vm.field.fieldGroup.name)"
							  onSelect="@command('flagDirty')"
							  hflex="1">
						<template name="empty" var="fieldGroup">
		                    <comboitem/>
		                </template>
		                <template name="group" var="fieldGroup">
		                    <comboitem label="@load(fieldGroup.name)"
		                    		   iconSclass="z-icon-object-group z-icon-fw alpha-icon-lg"/>
		                </template>
		            </combobox>
	            </div>
	        </vlayout> 		 
            <label value="${labels.label.datatype}:"/>
            <div sclass="datatype-field"> 
				<combobox model="@load(vm.fieldTypes)"
						  mandatory="true"
						  nullable="@load(vm.field.isNew() or !vm.field.isReferenceField())"
						  selectedItem="@bind(vm.field.type)"
						  value="@load(vm.getEnumLabel(vm.field.type))"
						  onSelect="@command('selectFieldType')"
						  hflex="1">
	                <template name="model" var="fieldType">
	                    <comboitem label="@load(vm.getEnumLabel(fieldType))"/>
	                </template>
	            </combobox>
	        </div>
	        <vlayout visible="@load(!vm.field.calculated and vm.field.type.supportsValidation())">
            	<label value="${labels.label.validation}:"/>
            	<div sclass="pattern-field"> 
	            	<textbox hflex="1"
	            		 	 value="@bind(vm.field.validationPattern) @converter(vm.stringConverter)"
	            		 	 tooltiptext="${labels.info.regularexpression}"
	            		 	 onChange="@command('flagDirty')"/>
	            </div>	
            </vlayout>
            <vlayout visible="@load(!vm.field.calculated and vm.field.type.supportsMinMaxValues())">
				<label value="${labels.label.minvalue}:"/>	
				<div sclass="minvalue-field"> 
            		<intbox visible="@load(vm.field.type.isInteger())"
            				value="@bind(vm.field.minInt)"
            				onChange="@command('flagDirty')" hflex="1"/>
            		<longbox visible="@load(vm.field.type.isLong())"
		      				 value="@bind(vm.field.minLong)"
							 onChange="@command('flagDirty')" hflex="1"/>
					<datebox visible="@load(vm.field.type.isDate())"
		      				 value="@bind(vm.field.minDate)"
							 onChange="@command('flagDirty')" hflex="1"/>
					<datebox visible="@load(vm.field.type.isDateTime())"
		      				 value="@bind(vm.field.minDateTime)"
		      				 format="medium+medium"
							 onChange="@command('flagDirty')" hflex="1"/>
					<decimalbox visible="@load(vm.field.type.isDecimal())"
		      					value="@bind(vm.field.minDecimal)"
								onChange="@command('flagDirty')" hflex="1"/>
					<doublebox visible="@load(vm.field.type.isDouble())"
		      				   value="@bind(vm.field.minDouble)"
							   onChange="@command('flagDirty')" hflex="1"/>
            	</div>
            	<label value="${labels.label.maxvalue}:"/>	
				<div sclass="maxvalue-field"> 
            		<intbox visible="@load(vm.field.type.isInteger())"
            				value="@bind(vm.field.maxInt)"
            				onChange="@command('flagDirty')" hflex="1"/>
            		<longbox visible="@load(vm.field.type.isLong())"
		      				 value="@bind(vm.field.maxLong)"
							 onChange="@command('flagDirty')" hflex="1"/>
					<datebox visible="@load(vm.field.type.isDate())"
		      				 value="@bind(vm.field.maxDate)"
							 onChange="@command('flagDirty')" hflex="1"/>
					<datebox visible="@load(vm.field.type.isDateTime())"
		      				 value="@bind(vm.field.maxDateTime)"
		      				 format="medium+medium"
							 onChange="@command('flagDirty')" hflex="1"/>
					<decimalbox visible="@load(vm.field.type.isDecimal())"
		      					value="@bind(vm.field.maxDecimal)"
								onChange="@command('flagDirty')" hflex="1"/>
					<doublebox visible="@load(vm.field.type.isDouble())"
		      				   value="@bind(vm.field.maxDouble)"
							   onChange="@command('flagDirty')" hflex="1"/>
            	</div>
            </vlayout>
	        <vlayout visible="@load(vm.field.type.isText())">
            	<label value="${labels.label.length}:"/>
            	<div sclass="length-field"> 
	            	<intbox value="@bind(vm.field.length)"
	            			onChange="@command('flagDirty')"
	            			placeholder="@init(vm.maxFieldLength)"/>
	            </div>	
            </vlayout>
            <vlayout visible="@load(vm.field.type.isAutonum())">
            	<hlayout>
            		<label value="${labels.label.pattern}:"/>
            		<helpinfo key="help.autonum.pattern"/>
            	</hlayout>
            	<div sclass="autonumpattern-field"> 
	            	<textbox hflex="1"
	            		 	 value="@bind(vm.field.autonumPattern) @converter(vm.stringConverter)"
	            		 	 onChange="@command('flagDirty')"/>
            	</div>
            	<label value="${labels.label.startvalue}:"/>
            	<div sclass="autonumstart-field"> 
	            	<longbox hflex="1"
	            		 	 value="@bind(vm.field.autonumStart)"
	            		 	 onChange="@command('flagDirty')"
	            		 	 placeholder="1"/>
	            </div>
            </vlayout>
            <vlayout visible="@load(vm.field.isReferenceField())">
            	<label value="${labels.label.refentity}:"/>
            	<div sclass="referenceentity-field"> 
	            	<combobox model="@load(vm.referenceEntities) @template(empty each.name ? 'empty' : 'entity')"
	            			  mandatory="true"
	            			  nullable="@load(vm.field.isNew())"
	            			  selectedItem="@bind(vm.field.referenceEntity)"
	            			  value="@load(vm.field.referenceEntity.name)"
	            			  onSelect="@command('selectReferencedEntity')"
						  	  hflex="1">
						<template name="empty">
	                    	<comboitem/>
	                	</template>	
	            		<template name="entity" var="refEntity">
	                    	<comboitem label="@init(refEntity.name)"
	                    			   iconSclass="z-icon-table z-icon-fw alpha-icon-lg"/>
	                	</template>	
	            	</combobox>
	            </div>
            </vlayout>
            <vlayout visible="@load(!empty vm.field.type and !vm.field.type.isBoolean())">
            	<space/>
	       		<label value="${labels.label.options}:"/>	 
	       		<hlayout visible="@load(!vm.field.calculated)">
       				<checkbox sclass="mandatory-field"
	        				  checked="@bind(vm.field.mandatory)"
	        				  onCheck="@command('flagDirty')"
	        				  disabled="@load(vm.field.type.isAutonum() or (vm.field.isNew() and vm.field.unique and vm.existValueObjects()))"/>
		        	<label value="${labels.label.mandatoryfield}"/>
	       		</hlayout>
	       		<hlayout visible="@load(!vm.field.type.isAutonum() and vm.field.mandatory and vm.existValueObjects() and !vm.isAlreadyMandatory(vm.field))">
	       			<space/>
		       		<vlayout hflex="1">
		       			<label value="${labels.label.defaultvalue}:"/>
		       			<textbox visible="@load(vm.field.type.isText() or vm.field.type.isTextLong())"
		       					 value="@bind(vm.field.defaultString)"
		       					 onChange="@command('flagDirty')"
		       					 mandatory="true" hflex="1"/>
		       		    <intbox visible="@load(vm.field.type.isInteger())"
		       					value="@bind(vm.field.defaultNumber)"
		       					onChange="@command('flagDirty')"
		       					mandatory="true" hflex="1"/>
		       			<longbox visible="@load(vm.field.type.isLong())"
		       					 value="@bind(vm.field.defaultNumber)"
		       					 onChange="@command('flagDirty')"
		       					 mandatory="true" hflex="1"/>
		       			<datebox visible="@load(vm.field.type.isDate())"
		       					 value="@bind(vm.field.defaultDate)"
		       					 onChange="@command('flagDirty')"
		       					 mandatory="true" hflex="1"/>
		       			<datebox visible="@load(vm.field.type.isDateTime())"
		       					 value="@bind(vm.field.defaultDate)"
		       					 onChange="@command('flagDirty')"
		       					 format="medium+medium"
		       					 mandatory="true" hflex="1"/>		 
		       			<decimalbox visible="@load(vm.field.type.isDecimal())"
		       					    value="@bind(vm.field.defaultNumber)"
		       					    onChange="@command('flagDirty')"
		       					    mandatory="true" hflex="1"/>		 
		       			<doublebox visible="@load(vm.field.type.isDouble())"
		       					   value="@bind(vm.field.defaultNumber)"
		       					   onChange="@command('flagDirty')"
		       					   mandatory="true" hflex="1"/>		 
		       			<combobox visible="@load(vm.field.isReferenceField())"
		       					  model="@load(vm.getReferenceValues(vm.field))"
		       					  selectedItem="@bind(vm.field.defaultObject)"
		       					  onSelect="@command('flagDirty')"
		       					  mandatory="true" hflex="1">
		       				<template name="model" var="obj">
		       					<comboitem label="@load(vm.getReferenceValue(obj))"/>
		       				</template>
		       			</combobox>		 
		       			<space/>
		       		</vlayout>
	       		</hlayout>
	       		<hlayout visible="@load(!(vm.field.calculated or vm.field.type.isBinary() or vm.field.type.isFile()))">
        			<checkbox sclass="unique-field"
        					  checked="@bind(vm.field.unique)" 
	        				  onCheck="@command('flagDirty')"
	        				  disabled="@load(vm.field.type.isAutonum() or (vm.field.isNew() and vm.field.mandatory and vm.existValueObjects()))"/>
		        	<label value="${labels.label.unique}"/>
	       		</hlayout>
	       		<hlayout visible="@load(!(vm.field.calculated or vm.field.type.isBinary() or vm.field.type.isFile()))">
        			<checkbox sclass="indexed-field"
        					  checked="@bind(vm.field.indexed)" 
	        				  onCheck="@command('flagDirty')"/>
		        	<label value="${labels.label.index}"/>
	       		</hlayout>
	       		<hlayout visible="@load(vm.fullTextSearchAvailable and (vm.field.isTextField() or vm.field.type.isAutonum() or vm.field.isReferenceField()))">
        			<checkbox sclass="fulltextsearch-field"
        					  checked="@bind(vm.field.fullTextSearch)" 
	        				  onCheck="@command('flagDirty')"/>
		        	<label value="${labels.label.fulltextsearch}"/>
	       		</hlayout>
	       		<hlayout visible="@load(!vm.object.isNew() and !(vm.field.type.isAutonum() or vm.field.isReferenceField() or vm.field.type.isFile() or vm.field.mandatory or vm.field.unique or vm.field.indexed))">
        			<checkbox sclass="calculated-field"
        					  checked="@bind(vm.field.calculated)" 
	        				  onCheck="@command('flagDirty')"/>
		        	<label value="${labels.label.calculated}"/>
	       		</hlayout>
	       		<hlayout visible="@load(vm.field.calculated)">
	       			<vlayout hflex="1">
	       				<label value="${labels.label.calculationformula}:"/>
	       				<div sclass="formula-field"> 
			       			<textbox value="@bind(vm.field.formula)"
			       					 onChange="@command('flagDirty')"
			       					 mandatory="true"
			       					 hflex="1" rows="3"/>
			       		</div>
		       		</vlayout>
	       		</hlayout>
	       	</vlayout>
        </vlayout>
	</east>
</borderlayout>