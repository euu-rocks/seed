<!--

    Seed
    Copyright (C) 2021 EUUâ›°ROCKS

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE xml>
<borderlayout>
	<north border="0">
		<hbox hflex="1">
			<toolbar hflex="1">
				<toolbarbutton label="${labels.admin.entity.newstatustransition}" 
							   iconSclass="new-button z-icon-plus alpha-icon-lg" 
						   	   onClick="@command('newStatusTransition')"/>
				<toolbarbutton label="${labels.admin.entity.removestatustransition}" 
							   iconSclass="remove-button z-icon-remove alpha-icon-lg" 
						   	   onClick="@command('removeStatusTransition')"
						   	   visible="@load(not empty vm.statusTransition)"/>
			</toolbar>
			<toolbar visible="@load(!empty vm.object.statusList)"
					 overflowPopup="false"
					 align="end" hflex="min">
				<toolbarbutton iconSclass="z-icon-map-o alpha-icon-lg" 
							   label="${labels.admin.entity.showstatusdiagram}" 
							   onClick="@command('showStatusDiagram')"/>			 
			</toolbar>
		</hbox>
	</north>
	<center border="0">
		<listbox mold="paging" autopaging="true"
				 model="@load(vm.object.statusTransitions)" 
		         selectedItem="@bind(vm.statusTransition)"
		         visible="@load(not empty vm.object.statusTransitions)"
		         hflex="1" vflex="1" 
		         class="alpha-noborder">
			<listhead sizable="true">
				<listheader label="${labels.label.sourcestatus}"
							sort="auto(sourceStatus.numberAndName)" hflex="1"/>
	            <listheader label="${labels.label.targetstatus}"
	            			sort="auto(targetStatus.numberAndName)" hflex="1"/>
	        </listhead>      
		    <template name="model" var="transition">
	            <listitem sclass="@init(vm.getListItemTestClass(transition))" 
	            		  attributes.item="@load(transition)" 
	            		  draggable="true" droppable="true" 
	            		  onDrop="@command('swapStatusTransition',item=event.dragged.attributes.item,base=transition)">
	            	<listcell>
	            		<label value="@load(transition.sourceStatus.numberAndName)"/>
	            	</listcell>
	            	<listcell>
	            		<label value="@load(transition.targetStatus.numberAndName)"/>
	            	</listcell>
	            </listitem>
		    </template>          
		</listbox>
	</center>
	<east title="${labels.label.properties}"
		  visible="@load(!empty vm.statusTransition)" 
		  width="275px" border="0" collapsible="true"
		  class="alpha-properties">
		<vlayout class="alpha-properties-content">
			<label value="${labels.label.sourcestatus}:"/>
			<div sclass="sourcestatus-field"> 
				<combobox model="@load(vm.object.statusList)" 
		             	  mandatory="true"
		             	  selectedItem="@bind(vm.statusTransition.sourceStatus)"
		             	  onSelect="@command('flagDirty')"
		             	  value="@load(vm.statusTransition.sourceStatus.numberAndName)"
		             	  hflex="1">
		        	<template name="model" var="status">
		            	<comboitem label="@load(status.numberAndName)"/>
		            </template>
		     	</combobox>
	     	</div>
	     	<label value="${labels.label.targetstatus}:"/>
	     	<div sclass="targetstatus-field">
				<combobox model="@load(vm.object.statusList)" 
						  mandatory="true"
		             	  selectedItem="@bind(vm.statusTransition.targetStatus)"
		             	  onSelect="@command('flagDirty')"
		             	  value="@load(vm.statusTransition.targetStatus.numberAndName)"
		             	  hflex="1">
		        	<template name="model" var="status">
		            	<comboitem label="@load(status.numberAndName)"/>
		            </template>
		     	</combobox>
	     	</div>
	     	<label value="${labels.label.description}:"/>
	     	<div sclass="description-field">
	            <textbox hflex="1" rows="5"
	               		 value="@bind(vm.statusTransition.description) @converter(vm.stringConverter)"
	               		 onChanging="@command('flagDirty')"/>
            </div>
		</vlayout>
	</east>
</borderlayout>